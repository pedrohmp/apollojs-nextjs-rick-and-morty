{"ast":null,"code":"var _jsxFileName = \"/home/pedrohmp/Documents/projetos/devtalks/apollojs-nextjs-rick-and-morty/src/components/CharacterList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Grid } from '../styles/components/Character';\nimport ALL_CHARACTERS from '../../gql/allCharacters';\nimport { useQuery } from '@apollo/client';\n\nconst CharacterList = () => {\n  const {\n    data = {},\n    error,\n    loading\n  } = useQuery(ALL_CHARACTERS, {\n    notifyOnNetworkStatusChange: true\n  });\n  const {\n    characters\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Personagens\"), __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, characters && characters.results.map(element => __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: element.image,\n    alt: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, element.name)))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["/home/pedrohmp/Documents/projetos/devtalks/apollojs-nextjs-rick-and-morty/src/components/CharacterList.tsx"],"names":["React","Box","Grid","ALL_CHARACTERS","useQuery","CharacterList","data","error","loading","notifyOnNetworkStatusChange","characters","results","map","element","image","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAcC,GAAd,EAAmBC,IAAnB,QAA+B,gCAA/B;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,aAAuB,GAAG,MAAM;AACpC,QAAM;AAAEC,IAAAA,IAAI,GAAG,EAAT;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAgCJ,QAAQ,CAACD,cAAD,EAAiB;AAC7DM,IAAAA,2BAA2B,EAAE;AADgC,GAAjB,CAA9C;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAiBJ,IAAvB;AAEA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,IACTA,UAAU,CAACC,OAAX,CAAmBC,GAAnB,CAAuBC,OAAO,IAC5B,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,OAAO,CAACC,KAAlB;AAAyB,IAAA,GAAG,EAAED,OAAO,CAACE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAACE,IAAZ,CAFF,CADF,CAFJ,CAHF,CADF;AAeD,CAtBD;;AAwBA,eAAeV,aAAf","sourcesContent":["import React from 'react'\n\nimport { Row, Box, Grid } from '../styles/components/Character'\n\nimport ALL_CHARACTERS from '../../gql/allCharacters'\n\nimport { useQuery } from '@apollo/client'\n\nconst CharacterList: React.FC = () => {\n  const { data = {}, error, loading } = useQuery(ALL_CHARACTERS, {\n    notifyOnNetworkStatusChange: true\n  })\n\n  const { characters } = data\n\n  return (\n    <>\n      <h2>Personagens</h2>\n\n      <Grid>\n        {characters &&\n          characters.results.map(element => (\n            <Box>\n              <img src={element.image} alt={element.name} />\n              <p>{element.name}</p>\n            </Box>\n          ))}\n      </Grid>\n    </>\n  )\n}\n\nexport default CharacterList\n"]},"metadata":{},"sourceType":"module"}