{"ast":null,"code":"var _jsxFileName = \"/home/pedrohmp/Documents/projetos/devtalks/apollojs-nextjs-rick-and-morty/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from '../styles/global';\nimport theme from '../styles/theme';\nimport { useApollo } from 'libs/apolloClient';\nimport { ApolloProvider } from '@apollo/client';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const apolloClient = useApollo(pageProps.initialApolloState);\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/home/pedrohmp/Documents/projetos/devtalks/apollojs-nextjs-rick-and-morty/src/pages/_app.tsx"],"names":["React","ThemeProvider","GlobalStyle","theme","useApollo","ApolloProvider","MyApp","Component","pageProps","apolloClient","initialApolloState"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAEA,MAAMC,KAAyB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC9D,QAAMC,YAAY,GAAGL,SAAS,CAACI,SAAS,CAACE,kBAAX,CAA9B;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAXD;;AAaA,eAAeF,KAAf","sourcesContent":["import React from 'react'\nimport { AppProps } from 'next/app'\nimport { ThemeProvider } from 'styled-components'\n\nimport GlobalStyle from '../styles/global'\n\nimport theme from '../styles/theme'\nimport { useApollo } from 'libs/apolloClient'\nimport { ApolloProvider } from '@apollo/client'\n\nconst MyApp: React.FC<AppProps> = ({ Component, pageProps }) => {\n  const apolloClient = useApollo(pageProps.initialApolloState)\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <ThemeProvider theme={theme}>\n        <Component {...pageProps} />\n        <GlobalStyle />\n      </ThemeProvider>\n    </ApolloProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}